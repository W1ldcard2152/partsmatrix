# Generated by Django 4.2.7 on 2025-05-24 04:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vehicles', '0001_initial'),
        ('parts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, help_text='Front, Rear, Left, Right, Upper, Lower, etc.', max_length=50)),
                ('quantity', models.PositiveSmallIntegerField(default=1, help_text='Number of this part required per vehicle')),
                ('notes', models.TextField(blank=True, help_text='Special fitment requirements, exceptions, or additional specifications')),
                ('is_verified', models.BooleanField(default=False, help_text='Has this fitment been verified for accuracy?')),
                ('verified_by', models.CharField(blank=True, help_text='Source of verification (catalog, manual, etc.)', max_length=100)),
                ('verification_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100)),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitments', to='parts.part')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fitments', to='vehicles.vehicle')),
            ],
            options={
                'ordering': ['part', 'vehicle'],
                'unique_together': {('part', 'vehicle', 'position')},
            },
        ),
        migrations.CreateModel(
            name='FitmentBulkImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_name', models.CharField(blank=True, max_length=200)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('successful_imports', models.PositiveIntegerField(default=0)),
                ('failed_imports', models.PositiveIntegerField(default=0)),
                ('import_log', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FitmentNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('EXCEPTION', 'Exception'), ('REQUIREMENT', 'Requirement'), ('WARNING', 'Warning'), ('INFO', 'Information')], default='INFO', max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_critical', models.BooleanField(default=False, help_text='Is this note critical for proper fitment?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_notes', to='fitments.fitment')),
            ],
            options={
                'ordering': ['-is_critical', 'note_type', 'title'],
            },
        ),
    ]
