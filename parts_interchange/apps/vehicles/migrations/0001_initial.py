# Generated by Django 4.2.7 on 2025-05-24 04:03

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('displacement', models.DecimalField(blank=True, decimal_places=1, help_text='Engine displacement in liters', max_digits=4, null=True)),
                ('cylinders', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(16)])),
                ('fuel_type', models.CharField(choices=[('GAS', 'Gasoline'), ('DSL', 'Diesel'), ('HYB', 'Hybrid'), ('ELC', 'Electric'), ('E85', 'E85 Ethanol')], default='GAS', max_length=3)),
                ('aspiration', models.CharField(choices=[('NA', 'Naturally Aspirated'), ('TC', 'Turbocharged'), ('SC', 'Supercharged'), ('TSC', 'Twin Supercharged')], default='NA', max_length=3)),
                ('horsepower', models.PositiveIntegerField(blank=True, null=True)),
                ('torque', models.PositiveIntegerField(blank=True, help_text='Torque in lb-ft', null=True)),
                ('engine_code', models.CharField(blank=True, help_text='Manufacturer engine code', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('body_style', models.CharField(blank=True, help_text='Sedan, Coupe, SUV, Truck, etc.', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='vehicles.make')),
            ],
            options={
                'ordering': ['make', 'name'],
                'unique_together': {('make', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Trim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2027)])),
                ('transmission_type', models.CharField(blank=True, choices=[('AUTO', 'Automatic'), ('MANUAL', 'Manual'), ('CVT', 'CVT')], max_length=20)),
                ('drivetrain', models.CharField(blank=True, choices=[('FWD', 'Front Wheel Drive'), ('RWD', 'Rear Wheel Drive'), ('AWD', 'All Wheel Drive'), ('4WD', '4 Wheel Drive')], max_length=10)),
                ('build_start_date', models.DateField(blank=True, null=True)),
                ('build_end_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional specifications like gear ratios, build dates, etc.')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('engine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vehicles.engine')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vehicles.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vehicles.model')),
                ('trim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='vehicles.trim')),
            ],
            options={
                'ordering': ['year', 'make', 'model', 'trim'],
                'unique_together': {('year', 'make', 'model', 'trim', 'engine')},
            },
        ),
    ]
